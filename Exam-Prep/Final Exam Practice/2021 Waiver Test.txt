q1. A
q2. E
q3. C
q4. B
q5. C
q6. C
q7. A
q8. D
q9. B
q10. A

Question 1

int swap(int number) {
	if (number /10 == 0) {
		return number;
	}
	int num1 = number;
	int swapped = 0;
	swapped += num1 /100 + (num1 % 10) *10
	num1 = num1 / 10;
	swapped += (num1 % 10);
	return swapped;

Question 2

bool is_sorted(char values[]) {
	char *string = values;
	while(*(string+1) != '\0') {
		if (*string > *(string+1) {
			return false;
		}
		string++;
	}
	return true;

}

Question 4

void swap_pairs(char string[]) {
	int length = strlen(string);
	for (int i = 0; i< length; i += 2) {
		char temp = string[i];
		string[i] = string[i+1];
		string[i+1] = temp;
	}
		

Question 3

19
14
11
6
0.7
-1


Question 5

#include <stdio.h>
#include <stdlib.h>
typedef struct {
int numerator;
int denominator;
} fraction;
/*
* This function returns the largest positive integer that divides each of the integers.
* For example, the gcd of 8 and 12 is 4. it returns 0 if both a and b are 0.
*/
int gcd(long a, long b) {
if (b == 0)
return a;
else
return gcd(b, a % b);
}

void multiply(fraction first, fraction second, fraction **result) {
	*result = malloc(sizeof(fraction));
	fraction* new = *result;
	int new_num = first.numerator * second.numerator;
	int new_denum = first.denominator * second.denominator;
	int largest = gcd(new_num, new_denum);
	new_num = new_num / largest;
	new_denum = new_denum / largest;
	new->numerator = new_num;
	new->denominator = new_denum;
	
}
Question 6

2. should be while(start <= end) line 38
3. should de referrence in line 18
4. should add in null pointer into result
5. realloc result















		